apply plugin: 'com.android.application'

def versionMajor = 0
def versionMinor = 4
def versionPatch = 0

android {
    compileSdkVersion 28

    defaultConfig {
        //noinspection GroovyAssignabilityCheck
        applicationId "com.vlad805.fmradio"
        minSdkVersion 21
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 22
        //noinspection GroovyAssignabilityCheck
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        //noinspection GroovyAssignabilityCheck
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    buildTypes {
        release {
            //noinspection GroovyAssignabilityCheck
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //noinspection GroovyMissingReturnStatement
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
    }

    //noinspection GroovyMissingReturnStatement
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    // If you use each() to iterate through the variant objects,
// you need to start using all(). That's because each() iterates
// through only the objects that already exist during configuration timeâ€”
// but those object don't exist at configuration time with the new model.
// However, all() adapts to the new model by picking up object as they are
// added during execution.
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${defaultConfig.applicationId}-${variant.versionName}.apk"
        }
    }

}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.core:core:1.2.0-rc01"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha01"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.preference:preference:1.1.0"
}
